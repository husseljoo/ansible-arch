---
- name: playbook_core.yml - archlinux base setup
  hosts: all
  become: yes

  tasks:
    # ARCH FULL UPDATE  ----------------------------------------------------------

    - name: update arch
      pacman:
        update_cache: yes
        upgrade: yes

    # INSTALL VARIOUS PACKAGES  --------------------------------------------------

    - name: install bunch of packages
      pacman:
        update_cache: yes
        name:
          - base-devel
          - git
          - curl
          - wget
          - lsd
          - ranger
          - fzf
          - bat
          - tree
          - duf
          - ncdu
          - htop
          - iotop
          - glances
          - zathura
          - neovim
          - python-pip

    # PARU FOR AUR REPOSITORY  ---------------------------------------------------

    - name: git clone paru repo in to /tmp
      become: no
      git:
        repo: "git clone https://aur.archlinux.org/paru.git"
        dest: $HOME
        clone: yes

    - name: install paru using makepkg
      become: yes
      expect:
        chdir: $HOME
        command: makepkg -si
        responses:
          (?i)(.*)Proceed with installation(.*): "y"
          (?i)(.*)Enter a number(.*): "1"

    # SYSTEM SETTINGS CHANGES ----------------------------------------------------

    - name: pacman - enable color
      lineinfile:
        path: /etc/pacman.conf
        regexp: "^#Color$"
        line: "Color"

    - name: pacman - enable ParallelDownloads = 5
      lineinfile:
        path: /etc/pacman.conf
        regexp: "#ParallelDownloads = 5"
        line: "ParallelDownloads = 5"

    - name: makepkg - disable compression
      lineinfile:
        path: /etc/makepkg.conf
        regexp: "PKGEXT='.pkg.tar.zst'"
        line: "PKGEXT='.pkg.tar'"

    - name: makepkg - enable parallel compilation MAKEFLAGS="-j$(nproc)"
      lineinfile:
        path: /etc/makepkg.conf
        regexp: '#MAKEFLAGS="-j2"'
        line: 'MAKEFLAGS="-j$(nproc)"'

    - name: fstab change relatime to noatime
      replace:
        path: /etc/fstab
        regexp: "relatime"
        replace: "noatime"

    - name: change number of failed logins that triger 10min lockout
      lineinfile:
        path: /etc/security/faillock.conf
        regexp: "^# deny = 3$"
        line: "deny = 10"

    - name: enable members of wheel group to sudo
      lineinfile:
        path: /etc/sudoers.d/01_wheel_allow_sudo
        state: present
        line: "%wheel ALL=(ALL:ALL) ALL"
        validate: /usr/sbin/visudo -cf %s
        create: yes

    # SSH ------------------------------------------------------------------------

    - name: install ssh
      pacman:
        name:
          - openssh

    - name: enable and start ssh service
      systemd:
        name: sshd
        enabled: yes
        state: started

    # LOCATE THE QUICK FILE SEARCH  ----------------------------------------------

    - name: install plocate
      pacman:
        name:
          - plocate

    - name: enable and start ~12h updatedb timer
      systemd:
        name: plocate-updatedb.timer
        enabled: yes
        state: started

    # CRONIE  --------------------------------------------------------------------

    - name: install cronie
      pacman:
        name:
          - cronie

    - name: enable and start cronie.service
      systemd:
        name: cronie
        enabled: yes
        state: started

    # ARCHLINUX-KEYRING WEEKLY UPDATE  -------------------------------------------

    - name: archlinux-keyring - enable weekly update
      systemd:
        name: archlinux-keyring-wkd-sync.timer
        enabled: yes
        state: started

    # SSD TRIM SCHEDULED  --------------------------------------------------------

    - name: install util-linux
      pacman:
        name:
          - util-linux

    - name: enable and start weekly ssd disks trim using fstrim timer
      systemd:
        name: fstrim.timer
        enabled: yes
        state: started

    # TRASH SETUP ----------------------------------------------------------------

    - name: install trash-cli
      pacman:
        name:
          - trash-cli

    - name: create trash-empty.service file
      copy:
        dest: "/etc/systemd/system/trash-empty.service"
        content: |
          [Unit]
          Description=Empty trash older than 30 days

          [Service]
          Type=oneshot
          ExecStart=/usr/bin/trash-empty 30

    - name: create trash-empty.timer file
      copy:
        dest: "/etc/systemd/system/trash-empty.timer"
        content: |
          [Unit]
          Description=Empty trash older than 30 days daily

          [Timer]
          OnCalendar=daily
          Persistent=true

          [Install]
          WantedBy=timers.target

    - name: enable and start trash-empty.timer
      systemd:
        name: trash-empty.timer
        enabled: yes
        state: started

    # CACHE CLEANER SCHEDULED  ---------------------------------------------------

    - name: install pacman-contrib
      pacman:
        name:
          - pacman-contrib

    - name: enable and start weekly cache cleanup paccache timer
      systemd:
        name: paccache.timer
        enabled: yes
        state: started

    # REFLECTOR TO REGULARLY UPDATE MIRRORLIST  ---- CHANGE COUNTRY CODES !!! ----

    - name: install reflector
      pacman:
        name:
          - reflector

    - name: write reflector configuration file
      copy:
        dest: "/etc/xdg/reflector/reflector.conf"
        content: |
          --save /etc/pacman.d/mirrorlist
          --protocol http
          --country SK,CZ
          --score 20
          --sort rate

    - name: enable and start reflector timer
      systemd:
        name: reflector.timer
        enabled: yes
        state: started

    - name: do initial run of reflector.service
      systemd:
        name: reflector
        enabled: yes
        state: started

    # LOGROTATE  -----------------------------------------------------------------

    - name: install logrotate
      pacman:
        name:
          - logrotate

    - name: logrotate - enable compression
      lineinfile:
        path: /etc/logrotate.conf
        regexp: "^#compress$"
        line: "compress"

    - name: enable and start daily logs rotation, cleanup
      systemd:
        name: logrotate.timer
        enabled: yes
        state: started

    # NEOFETCH  ------------------------------------------------------------------

    - name: install neofetch
      pacman:
        name:
          - neofetch

    - name: run neofetch to generate config
      become: no
      command: neofetch

    - name: enable disk info in neofetch
      become: no
      lineinfile:
        path: ~/.config/neofetch/config.conf
        regexp: '.*# info "Disk" disk$'
        line: '    info "Disk" disk'

    - name: enable local IP info in neofetch
      become: no
      lineinfile:
        path: ~/.config/neofetch/config.conf
        regexp: '.*# info "Local IP" local_ip$'
        line: '    info "Local IP" local_ip'
#  ---------------------------------------------------------------------------
